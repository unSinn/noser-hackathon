group 'com.noser'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.41'
    ext.spring_boot_version = '2.0.2.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}


apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8


jar {
    baseName = 'com.noser.hackathon'
    version = '0.0.1'
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    compile 'org.springframework.metrics:spring-metrics:latest.release'
    compile 'io.prometheus:simpleclient_common:latest.release'
    compile 'com.squareup.retrofit2:converter-scalars:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile('org.springframework.boot:spring-boot-starter-actuator')
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'io.kotlintest:kotlintest:1.3.5'
    testCompile 'com.natpryce:hamkrest:1.2.3.0'
    testCompile 'io.rest-assured:rest-assured:3.1.0'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    runtime("io.micrometer:micrometer-registry-prometheus")
}
